name: Deploy Worker2
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install
      
      - name: Install wrangler
        run: npm install -g wrangler
      
      - name: Check and Create KV Namespaces
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          # Define KV namespaces
          declare -a KV_NAMESPACES=("GEMINI_KEYS_KV" "WORKER_CONFIG_KV")
          
          for KV_NAMESPACE in "${KV_NAMESPACES[@]}"; do
            echo "Checking for KV namespace: $KV_NAMESPACE"
            if ! LIST_OUTPUT=$(wrangler kv namespace list 2>&1); then
              echo "Error getting KV namespace list: $LIST_OUTPUT"
              exit 1
            fi
            
            # Clean output (remove telemetry messages)
            LIST_OUTPUT=$(echo "$LIST_OUTPUT" | grep -v "Cloudflare collects" | grep -v "telemetry")
            
            # Check JSON validity
            if ! echo "$LIST_OUTPUT" | jq empty; then
              echo "Invalid JSON output from wrangler"
              exit 1
            fi
            
            # Check if KV namespace exists
            KV_ID=$(echo "$LIST_OUTPUT" | jq -r '.[] | select(.title == "gemini-proxy-panel-'$KV_NAMESPACE'") | .id')
            
            if [ -z "$KV_ID" ]; then
                echo "KV namespace $KV_NAMESPACE does not exist. Creating..."
                CREATE_OUTPUT=$(wrangler kv namespace create "gemini-proxy-panel-$KV_NAMESPACE" 2>&1)
                echo "Create KV namespace output: $CREATE_OUTPUT"
                KV_ID=$(echo "$CREATE_OUTPUT" | grep -o '[0-9a-f]\{32\}')
                
                if [ -z "$KV_ID" ]; then
                    echo "Failed to extract KV ID. Full output: $CREATE_OUTPUT"
                    exit 1
                fi
                
                echo "KV namespace $KV_NAMESPACE created successfully with ID: $KV_ID"
            else
                echo "KV namespace $KV_NAMESPACE already exists with ID: $KV_ID"
            fi
            
            # Set environment variable for each KV namespace ID
            echo "${KV_NAMESPACE}_ID=$KV_ID" >> $GITHUB_ENV
          done
      
      - name: Update wrangler.toml
        run: |
          # Read the entire content of wrangler.toml
          WRANGLER_CONTENT=$(cat wrangler.toml)
          
          # Update each KV namespace ID
          UPDATED_CONTENT="$WRANGLER_CONTENT"
          UPDATED_CONTENT=$(echo "$UPDATED_CONTENT" | sed '/binding = "GEMINI_KEYS_KV"/,/id = "[^"]*"/ s/id = "[^"]*"/id = "'$GEMINI_KEYS_KV_ID'"/')
          UPDATED_CONTENT=$(echo "$UPDATED_CONTENT" | sed '/binding = "WORKER_CONFIG_KV"/,/id = "[^"]*"/ s/id = "[^"]*"/id = "'$WORKER_CONFIG_KV_ID'"/')
          
          # Write the updated content back to wrangler.toml
          echo "$UPDATED_CONTENT" > wrangler.toml
          
          echo "Updated wrangler.toml content:"
          cat wrangler.toml
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
